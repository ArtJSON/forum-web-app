import { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';

import { Location } from '../../components/Location/Location';
import { PostSection } from '../../components/PostSection/PostSection';
import { SearchBanner } from '../../components/SearchBanner/SearchBanner';
import styles from '../../styles/Page.module.scss';
import { PostListingType } from '../../types/ListingTypes';

interface CategoryListingProps {
  categoryName: string;
  posts: PostListingType[];
}

const CategoryListing: NextPage<CategoryListingProps> = ({
  categoryName,
}: CategoryListingProps) => {
  return (
    <>
      <Head>
        <title>{categoryName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SearchBanner />
      <Location paths={[{ label: categoryName, url: '/category' }]} />
      <div className={styles.maxWidthContainer}>
        <PostSection title={categoryName} posts={mockedPosts} />
      </div>
    </>
  );
};

export default CategoryListing;

export const getServerSideProps: GetServerSideProps<
  CategoryListingProps
> = async (context) => {
  const data = { mockedPosts };

  // if () {
  //   return {
  //     notFound: true,
  //   };
  // }

  return {
    props: {
      categoryName: `Mocked category name: ${context.query.categoryId}`,
      posts: data.mockedPosts,
    },
  };
};

const mockedPosts = [
  {
    id: 'dsad',
    title: 'Test post 1',
    tags: ['Sofrin', 'Help'],
    lastResponse: 'yesterday',
    likes: 3,
    responses: 3,
    views: 3,
  },
];
