import { GetServerSideProps, NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import toast from "react-hot-toast";

import { Location } from "../../components/Location/Location";
import { Post } from "../../components/Post/Post";
import "../../components/PostSection/PostSection";
import { SearchBanner } from "../../components/SearchBanner/SearchBanner";
import styles from "../../styles/Page.module.scss";
import { trpc } from "../../utils/trpc";

interface PostPageProps {
  postId: string;
}

const PostPage: NextPage<PostPageProps> = ({ postId }) => {
  const router = useRouter();
  const { data: session } = useSession();
  const { data } = trpc.post.getPostById.useQuery(
    {
      id: postId,
      page: 0,
    },
    {
      refetchOnWindowFocus: false,
    }
  );

  const deletePostMutation = trpc.post.deletePostById.useMutation({
    onSuccess: () => {
      router.push("/");
    },
    onError: (error) => toast.error(`Something went wrong: ${error.message}`),
  });

  if (!data) {
    return <></>;
  }

  return (
    <>
      <Head>
        <title>Post test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SearchBanner />

      <Location
        paths={[
          { label: data?.category.name, url: `/category/${data?.categoryId}` },
          { label: "Test post", url: "/post/postid" },
        ]}
      />
      <div className={styles.maxWidthContainer}>
        {session?.user?.id === data.userId && (
          <button
            onClick={() => {
              deletePostMutation.mutate({ postId: data.id });
            }}
          >
            Delete this post
          </button>
        )}
        <Post {...data} />
      </div>
    </>
  );
};

export default PostPage;

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  return {
    props: {
      postId: `${ctx.query.postId}`,
    },
  };
};
